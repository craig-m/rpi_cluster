---
# Docker Swarm
- debug: msg="Docker Swarm control "
- debug: msg="enabled and started {{ rpi_docker_enabled }} "


# get docker info from host
- name: docker info
  shell: /usr/bin/docker info
  register: docker_info
  changed_when: False
  tags: [swarm]
  become: yes
  when:
    - "rpi_docker_enabled == True"


# Check swarm
- name: check swarm
  stat:
    path: "/opt/cluster/data/rpi_swarm_init.txt"
  register: swarm_init
  changed_when: False
  tags: [swarm]


# create swarm lead
- name: init the swarm
  shell: docker swarm init --advertise-addr {{ hostvars['delta']['ansible_eth0']['ipv4']['address'] }}
  when:
    - "'docker_swarminit' in group_names"
    - "swarm_init.stat.exists == False"
    - "rpi_docker_enabled == True"
  tags: [swarm]
  register: rpi_swarm_init_new
  become: yes


- name: "swarm init file"
  copy:
    content: "{{ rpi_swarm_init_new.stdout }}"
    dest: "/opt/cluster/data/rpi_swarm_init.txt"
  when:
    - rpi_swarm_init_new.changed
    - "swarm_init.stat.exists == False"
    - "rpi_docker_enabled == True"


# fetch swarm init file
- name: fetch swarm init file
  fetch:
    src: /opt/cluster/data/rpi_swarm_init.txt
    dest: /opt/cluster/backup
  when:
    - rpi_swarm_init_new.changed
    - "rpi_docker_enabled == True"


# docker node promote zeta
# docker node promote gamma
# docker node update --availability drain omega


- name: roles info txt
  lineinfile:
    path: /opt/cluster/data/info_roles.txt
    line: "{{role_path|basename}}"
  become: yes
  tags: [swarm]
