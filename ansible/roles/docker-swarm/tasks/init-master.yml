---
# init swarm on master node

- debug: msg="master node on {{ inventory_hostname }} "


- name: check if swarm leader has initialized
  stat:
    path: "/opt/cluster/data/swarm_master.txt"
  register: swarm_master_txt
  changed_when: False


- name: pausing
  pause:
    seconds: 2


- name: initialize the swarm
  shell: docker swarm init --advertise-addr {{ hostvars['delta']['ansible_eth0']['ipv4']['address'] }}
  when:
    - "'docker_master' in group_names"
    - "swarm_master_txt.stat.exists == False"
  register: rpi_swarm_init_new
  become: yes


- name: pausing
  pause:
    seconds: 2


- name: save swarm initialize info
  copy:
    content: "{{ rpi_swarm_init_new.stdout }}"
    dest: "/opt/cluster/data/swarm_master.txt"
  when:
    - "swarm_master_txt.stat.exists == False"
    - "rpi_swarm_init_new.changed"


- name: pausing
  pause:
    seconds: 2


- name: fetch swarm initialize info
  fetch:
    src: /opt/cluster/data/swarm_master.txt
    dest: /opt/cluster/backup
  when:
    - "rpi_swarm_init_new.changed"


# create Manager token on master node
- name: check for manager token
  stat:
    path: "/opt/cluster/data/swarm_manager_token.txt"
  register: swarm_manager_token
  changed_when: False


- name: get manager token
  shell: docker swarm join-token manager
  when:
    - "swarm_manager_token.stat.exists == False"
  register: swarm_manager_new
  become: yes


- name: pausing
  pause:
    seconds: 2


- name: save manager token
  copy:
    content: "{{ swarm_manager_new.stdout }}"
    dest: "/opt/cluster/data/swarm_manager_token.txt"
  when:
    - "'docker_master' in group_names"
    - "swarm_manager_new.changed"
    - "swarm_manager_token.stat.exists == False"


- name: pausing
  pause:
    seconds: 2


- name: fetch manager token
  fetch:
    src: /opt/cluster/data/swarm_manager_token.txt
    dest: /opt/cluster/backup
  when:
    - "swarm_manager_new.changed"


# don't deploy anything on this node
- name: check if demoted
  stat:
    path: "/opt/cluster/data/swarm_demoted.txt"
  register: swarm_demoted_txt
  changed_when: False


- name: masters dont work
  shell: "docker node update --availability drain {{ inventory_hostname }}"
  register: swarm_demoted
  when:
    - "swarm_demoted_txt.stat.exists == False"


- name: pausing
  pause:
    seconds: 2


- name: save demoted satus
  copy:
    content: "{{ swarm_demoted.stdout }}"
    dest: "/opt/cluster/data/swarm_demoted.txt"
  when:
    - "swarm_demoted_txt.stat.exists == False"


# swarm test service script
- name: copy swarm test service scripts
  copy:
    src: swarm_test.sh
    dest: /opt/cluster/docker/swarm_test.sh
    mode: 0755
    owner: pi
    group: pi
