#!/bin/bash
# {{ ansible_managed }}
# this script is run on boot by systemd, rpi-lanservices.service


logger -t rpicluster "lanservices-boot.sh started"

# pre-run checks ---------------------------------------------------------------

# no LD_PRELOAD
unset LD_PRELOAD

#-------------------------------------------------------------------------------


# set static arp if exists
if [ -f /etc/ethers ]; then
  arp -f /etc/ethers;
fi


# disable new USB devices
#
# "Set new devices connected to hostX to be deauthorized by default (ie: lock down)
# Doc: https://www.kernel.org/doc/Documentation/usb/authorization.txt
#
echo 0 > /sys/bus/usb/devices/usb1/authorized_default


# disable tty login
systemctl stop serial-getty@ttyAMA0.service


# If ctrl-alt-del is enabled then turn it off
#
if readlink /lib/systemd/system/ctrl-alt-del.target | grep reboot.target; then
  echo "reboot currently enabled - will turn off"
  rm -rfv /lib/systemd/system/ctrl-alt-del.target 
  ln -s /dev/null /lib/systemd/system/ctrl-alt-del.target 
  systemctl daemon-reload
else
  echo "reboot currently disabled"
fi


# create a 2MB tmpfs
if [ ! -f /mnt/ramstore/data/test.txt ]; then
  mkdir -p /mnt/ramstore/;
  mount -t tmpfs -o size=2m tmpfs /mnt/ramstore;
  # these files exist in Volatile memory!
  mkdir -p /mnt/ramstore/data;
  touch -f /mnt/ramstore/data/test.txt;
  touch -f /mnt/ramstore/data/hour_check.txt;
  chmod 700 /mnt/ramstore/data;

  mkdir -p /mnt/ramstore/pi;

  # temp SSH key in ram
  ssh-keygen -q -N "" -o -f /mnt/ramstore/pi/id_ecdsa_temp -t ecdsa
  chown pi:pi -R /mnt/ramstore/pi/*
  chmod 700 /mnt/ramstore/pi/
fi


# check failover node
pingresult=$(/usr/lib/nagios/plugins/check_host {{ rpi_failover_ip }});
logger -t rpicluster "lanservices-boot.sh ping failover: $pingresult";


# turn off red power LED
echo 1 | tee /sys/class/leds/led1/brightness
echo 0 | tee /sys/class/leds/led1/brightness

logger -t rpicluster "lanservices-boot.sh finished"

#-------------------------------------------------------------------------------
