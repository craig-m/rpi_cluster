---
- debug: msg="Kubernetes master setup"
  when:
    - "'docker_master' in group_names"

#-------------------------------------------------------------------------------
# init

# check if the cluster is alreadly initialized
- name: check for kube_info.txt
  stat: 
    path: "/opt/cluster/docker/kubecnf/kube_info.txt"
  register: kube_info_txt
  changed_when: False
  when:
    - "'docker_master' in group_names"

# config
- name: kubeadm config
  copy:
    dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
    content: |
      Environment="KUBELET_EXTRA_ARGS=--enable-controller-attach-detach=false"
  become: yes
  tags: [kube]
  when:
    - "'docker_master' in group_names"

# initialize the cluster (if not yet)
- name: init the master node
  script: init-kube.sh
  args:
    creates: /opt/cluster/docker/kubeinit.txt
    chdir: /opt/cluster/docker/scripts/
  become: yes
  when:
    - "rpi_docker_enabled == True"
    - "'docker_master' in group_names"
  register: initialized_main_node
  failed_when:
    - initialized_main_node.rc != 0


- name: pausing
  pause:
    seconds: 30
  when: initialized_main_node.changed


# save init info to kube_info.txt
- name: "initialization info"
  copy:
    content: "{{ initialized_main_node.stdout }}"
    dest: "/opt/cluster/docker/kubecnf/kube_info.txt"
  when:
    - initialized_main_node.changed
    - "kube_info_txt.stat.exists == False"
  register: created_kube_info_txt


# fetch init details
- name: fetch kube master api info
  fetch:
    src: /opt/cluster/docker/kubecnf/kube_info.txt
    dest: /opt/cluster/backup
  when:
    - created_kube_info_txt.changed

#-------------------------------------------------------------------------------

- name: pausing
  pause:
    seconds: 5

- name: run setup-kube.sh
  script: setup-kube.sh
  args:
    creates: /opt/cluster/docker/kubecnf/admin.conf
    chdir: /opt/cluster/docker/scripts/


#-------------------------------------------------------------------------------


- name: get cluster info
  command: kubectl cluster-info
  register: kube_cluster_info
  changed_when: False


# ara record: cluster info
- name: record cluster info
  ara_record:
    key: "kube_cluster_info"
    value: "{{ kube_cluster_info.stdout }}"
  register: kubeclustinfo


# log
- name: output to rpicluster log
  command: logger -t rpicluster ansible kubernetes master boss role ran
  changed_when: False
