---
# setup requirements, enable cgroups etc
- debug: msg="kubernetes system setup "


- name: disable swap
  script: /opt/cluster/bin/disable-swap.sh
  args:
    creates: /opt/cluster/data/swap_disabled
  become: yes
  tags: [kube]


- name: enable port forwarding
  sysctl:
    name: "net.ipv4.ip_forward"
    value: 1
    sysctl_set: yes
    state: present
    reload: yes
  become: yes


# Save /boot/cmdline.txt to /opt/cluster/backup/<host>/boot/cmdline.txt
- name: fetch cmdline txt
  fetch:
    src: /boot/cmdline.txt
    dest: /opt/cluster/backup


- name: check right options set in cmdline.txt
  shell: grep "cgroup_enable=memory cgroup_memory=1" /boot/cmdline.txt | wc -l
  register: check_cmdlineopt
  ignore_errors: yes
  changed_when: False


- name: add boot options and reboot
  script: genbootcmd.sh
  args:
    chdir: /opt/cluster/docker/scripts/
  when: check_cmdlineopt.stdout == "0"
  become: yes
  register: kube_bootopts


- name: pause
  pause:
    seconds: 15
  when: kube_bootopts.changed


# log
- name: output to rpicluster log
  command: logger -t rpicluster kubeernetes role changed /boot/cmdline.txt
  when: kube_bootopts.changed


# reboot if cmdline.txt changes
# reboot host
- name: rebooting host after change
  shell: sleep 2 && reboot now
  become: yes
  async: 30
  poll: 0
  ignore_errors: true
  tags: [kube]
  when: kube_bootopts.changed


# wait for host
- name: waiting for reboot
  wait_for:
    host: '{{ ansible_default_ipv4.address }}'
    port: 22
    state: started
    delay: 60
    timeout: 240
  with_items: '{{ play_hosts }}'
  connection: local
  tags: [kube]
  when: kube_bootopts.changed


# check cgroups
- name: test cgroups are OK
  shell: /opt/cluster/docker/scripts/check-cgroups-on.sh
  changed_when: False
