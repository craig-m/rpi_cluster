---
# install kubernetes on compute nodes
# For now all K8 and Docker setup is largely handled by bash scripts


- debug: msg="K8 setup on compute nodes "


- name: K8 make folder structure
  file:
    path: "{{ item.dir }}"
    state: directory
    recurse: yes
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items: "{{ k8_dir }}"
  become: yes
  tags: [kube]


- name: K8 copy bash scripts
  copy:
    src: "{{ item.file }}"
    dest: "/opt/cluster/docker/scripts/{{ item.file }}"
    owner: "root"
    group: "root"
    mode: 0755
  with_items: "{{ bashscriptk8 }}"
  become: true
  tags: [kube]


# System prerequisites
- include: systemopts.yml
  tags: [kube]


- name: K8 setup kubernetes apt repo
  shell: install-kube-apt.sh
  args:
    chdir: /opt/cluster/docker/scripts/
    creates: /etc/apt/sources.list.d/kubernetes.list
  register: installkubesh
  become: true
  tags: [kube]


# drop junk error message
- name: K8 drop these logs
  notify: syslog-restart
  become: yes
  copy:
    dest: "/etc/rsyslog.d/10-disable-kube.conf"
    content: |
      :msg, contains, "azure_dd.go" stop
  tags: [kube]


- name: K8 install policykit from apt
  apt:
    name: policykit-1
    state: present
  become: yes
  tags: [kube]


- name: K8 run install-kube-bin.sh
  shell: /opt/cluster/docker/scripts/install-kube-bin.sh
  args:
    creates: /opt/cluster/docker/kube-installed.txt
    chdir: /opt/cluster/docker/scripts/
  become: yes
  tags: [kube]
  register: kube_aptinst


- name: K8 pause
  pause:
    seconds: 30
  when: kube_aptinst.changed
  tags: [kube]


- name: K8 force systemd to reread configs
  systemd:
    daemon_reload: yes
  become: yes
  when: kube_aptinst.changed
  tags: [kube]


- name: K8 restart kubelet.service
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet.service
  become: yes
  when: kube_aptinst.changed
  tags: [kube]


#-------------------------------------------------------------------------------

# docker_master group
- import_tasks: node_master.yml
  tags:
    - kube
    - kubemaster
  when:
    - "'docker_master' in group_names"
    - "rpi_docker_enabled == True"


# docker_worker group
- import_tasks: node_worker.yml
  tags:
    - kube
    - kubemaster
  when:
    - "'docker_worker' in group_names"
    - "rpi_docker_enabled == True"

#-------------------------------------------------------------------------------


# enable services on boot
- name: K8 kubelet.service
  service:
    name: kubelet.service
    enabled: yes
  become: yes


# log
- name: K8 output to rpicluster log
  command: logger -t rpicluster ansible kubernetes roll ran
  tags: [kube]
  changed_when: False


- name: K8 roles info txt
  lineinfile:
    path: /opt/cluster/data/info_roles.txt
    line: "{{ role_path|basename }}"
  become: yes
  tags: [kube]
