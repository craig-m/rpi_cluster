---
# install kubernetes on compute nodes
- debug: msg="kubernetes setup on compute nodes "


- name: make folder structure
  file:
    path: "{{ item.dir }}"
    state: directory
    recurse: yes
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items: "{{ k8_dir }}"
  become: yes
  tags: [kube]


- name: copy bash scripts
  copy:
    src: "{{ item.file }}"
    dest: "/opt/cluster/docker/scripts/{{ item.file }}"
    owner: "root"
    group: "root"
    mode: 0755
  with_items: "{{ bashscriptk8 }}"
  become: true
  tags: [kube]


# System prerequisites
- include: systemopts.yml
  tags: [kube]


- name: setup kubernetes apt repo
  script: install-kube-apt.sh
  args:
    chdir: /opt/cluster/docker/scripts/
    creates: /etc/apt/sources.list.d/kubernetes.list
  register: installkubesh
  tags: [kube]


# drop junk error message
- name: drop these logs
  notify: syslog-restart
  become: yes
  copy:
    dest: "/etc/rsyslog.d/10-disable-kube.conf"
    content: |
      :msg, contains, "azure_dd.go" stop
  tags: [kube]


- name: pausing
  pause:
    seconds: 10
  when: installkubesh.changed
  tags: [kube]


- name: install policykit
  apt:
    name: policykit-1
  become: yes
  tags: [kube]


- name: install kube
  script: install-kube-bin.sh
  args:
    creates: /usr/bin/kubeadm
    chdir: /opt/cluster/docker/scripts/
  become: yes
  tags: [kube]
  register: kube_aptinst


- name: pause
  pause:
    seconds: 5
  when: kube_aptinst.changed
  tags: [kube]


- name: force systemd to reread configs
  systemd:
    daemon_reload: yes
  become: yes
  when: kube_aptinst.changed
  changed_when: False
  tags: [kube]


- name: restart kubelet.service
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet.service
  become: yes
  when: kube_aptinst.changed
  changed_when: False
  tags: [kube]


#-------------------------------------------------------------------------------

# docker_master group
- import_tasks: node_master.yml
  tags:
    - kube
    - kubemaster
  when:
    - "'docker_master' in group_names"
    - "rpi_docker_enabled == True"


# docker_worker group
- import_tasks: node_worker.yml
  tags:
    - kube
    - kubemaster
  when:
    - "'docker_worker' in group_names"
    - "rpi_docker_enabled == True"

#-------------------------------------------------------------------------------

# show nodes in cluster
- name: get nodes
  shell: kubectl get nodes
  tags: [kube]
  changed_when: False
  when:
    - "'docker_master' in group_names"
    - "rpi_docker_enabled == True"

# show pod servic
- name: kubectl get pods
  shell: kubectl get pods --namespace=kube-system
  tags: [kube]
  changed_when: False
  when:
    - "'docker_master' in group_names"
    - "rpi_docker_enabled == True"

#-------------------------------------------------------------------------------


# log
- name: output to rpicluster log
  shell: logger -t rpicluster ansible kubernetes roll ran
  tags: [kube]
  changed_when: False


- name: roles info txt
  lineinfile:
    path: /opt/cluster/data/info_roles.txt
    line: "{{ role_path|basename }}"
  become: yes
  tags: [kube]
