# {{ ansible_managed }}
# ansible role: {{role_path|basename}}

# COMPUTE node haproxy config

# Global and default -----------------------------------------------------------

global
  log /dev/log    local0
  log /dev/log    local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http


# Frontend ---------------------------------------------------------------------

frontend http-in
  #
  option httplog
  option forwardfor
  option http-server-close
  option httpclose
  #
  # listeners
  bind :::80
  #
  mode http
  log global
  #
  # remove headers
  # rspidel ^Server:.*$
  rspidel ^X-Powered-By:.*$
  #
  # rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubdomains;\ preload
  # rspadd X-Frame-Options:\ DENY
  #
  http-response set-header X-haproxy %s
  #
  # Gzip compression between HAProxy and client
  compression algo gzip
  compression type text/html text/plain text/javascript application/javascript application/xml text/css
  #
  # capture client info
  capture request header Referrer len 64
  capture request header Content-Length len 10
  capture request header User-Agent len 64
  #
  acl host_apiv2 hdr(host) -i api.{{ rpi_cust_domain }}.{{ rpi_cust_tld }}
  use_backend back_apiv2 if host_apiv2
  #
  # default site
  default_backend default-frontend


# Backends ----------------------------------------------------------------------

# Localhost (nginx)
backend default-frontend
  #
  mode http
  balance roundrobin
  option forwardfor
  #
  # add IP header
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-CLIENT-IP %[src]
  #
  # security headers
  http-response set-header X-XSS-Protection 1;mode=block
  http-response set-header Referrer-Policy strict-origin
  http-response set-header X-Content-Type-Options nosniff
  #
  http-response set-header X-haproxy-front %s
  #
  # backend servers
  server {{ inventory_hostname }} 127.0.0.1:{{ nginx_port }} maxconn 1000


# api_backend group
backend back_apiv2
  #
  reqirep  ^Host:   Host:\ api.{{ rpi_cust_domain }}.{{ rpi_cust_tld }}
  #
  http-request add-header X-Forwarded-For %[src]
  #
  # security headers
  http-response set-header X-XSS-Protection 1;mode=block
  http-response set-header Referrer-Policy strict-origin
  http-response set-header X-Content-Type-Options nosniff
  #
  http-response set-header X-haproxy-api %s
  #
  {% for host in groups['api_backend'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:3000
  {% endfor %}


# eof --------------------------------------------------------------------------
