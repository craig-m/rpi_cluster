#!/bin/bash
# {{ ansible_managed }}
# setup by role: {{role_path|basename}}
#
# this script is run on boot by systemd, rpi-compute.service

logger -t rpicluster "compute-boot.sh started"

# pre-run checks ---------------------------------------------------------------

# no LD_PRELOAD
unset LD_PRELOAD

#-------------------------------------------------------------------------------


# disable new USB devices
#
# "Set new devices connected to hostX to be deauthorized by default (ie: lock down)
# Doc: https://www.kernel.org/doc/Documentation/usb/authorization.txt
#
echo 0 > /sys/bus/usb/devices/usb1/authorized_default


# disable tty login
systemctl stop serial-getty@ttyAMA0.service


# If ctrl-alt-del is enabled then turn it off
#
if readlink /lib/systemd/system/ctrl-alt-del.target | grep reboot.target; then
  echo "reboot currently enabled - will turn off"
  rm -rfv /lib/systemd/system/ctrl-alt-del.target 
  ln -s /dev/null /lib/systemd/system/ctrl-alt-del.target 
  systemctl daemon-reload
else
  echo "reboot currently disabled"
fi


# create a 1MB tmpfs
if [ ! -f /mnt/ramstore/data/test.txt ]; then
  mkdir -p /mnt/ramstore/;
  mount -t tmpfs -o size=1m tmpfs /mnt/ramstore;
  # these files exist in Volatile memory!
  mkdir -p /mnt/ramstore/data;
  touch -f /mnt/ramstore/data/test.txt;
  echo "compute" > /mnt/ramstore/data/test.txt;
  chmod 700 /mnt/ramstore/data;
fi

# Remount /proc with hidepid option to hide processes from other users
# todo: add to fstab
mount -o remount,rw,hidepid=2 /proc


# turn off red power LED
echo 1 | tee /sys/class/leds/led1/brightness
echo 0 | tee /sys/class/leds/led1/brightness

logger -t rpicluster "compute-boot.sh finished"

#-------------------------------------------------------------------------------
